{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":"<ul> <li>About the gripper</li> <li>Installation</li> <li>Control</li> <li>Application interfaces</li> <li>Safety</li> <li>Performance</li> </ul>"},{"location":"page1_about_the_gripper/","title":"About the gripper","text":"<p>SSG-48 adaptive electric gripper is a gripper based on Spectral micro BLDC drivers. It is a gripper capable of controlling its gripping force, making it perfect for assembly tasks and human-robot collaboration. Gripping force can be adjusted allowing you to grasp a wide range of items; from delicate and soft to rigid and sturdy. </p> <p>STL and STEP files are open source allowing you to add a custom griping tool and attach it to any robotic arm or robot. </p> <p>SSG-48 adaptive electric gripper is available as a fully assembled gripper or you can build your own by following assembly manual.</p> <p>The gripper has a single actuator for opening  both of its jaws. A system works like rack and pinion where motor is a pinion and jaws are on rack.</p> <p>If you plan to build SSG-48 adaptive electric gripper by yourself you will need to source all the parts from this BOM. After that you can follow the assembly manual to assemble your gripper.</p>"},{"location":"page1_about_the_gripper/#general-specs","title":"General specs:","text":"<ul> <li>Power supply: 24V</li> <li>Idle power: 0.5W</li> <li>Weight: 400 g</li> <li>Maximum gripping force: 80N</li> <li>Minimum gripping force: 5N</li> <li>Operating temperature -5 to 65 deg</li> <li>Communication interface: CAN bus</li> <li>CAN baud rate: 1Mbit</li> <li>Material: PETG plastic</li> <li>Stroke: 0 - 48 mm</li> </ul>"},{"location":"page1_about_the_gripper/#gripper-stroke","title":"Gripper stroke","text":""},{"location":"page1_about_the_gripper/#grasps","title":"Grasps","text":"<p>Gripper can perform 2 types of graps:</p> <ul> <li>External grasp \u2013 Used to hold objects by applying pressure from the outside.</li> <li>Internal grasp - Allows you to grasp hollow objects by applying pressure from the inside.</li> </ul>"},{"location":"page1_about_the_gripper/#pinout-and-connection","title":"Pinout and connection","text":"<p>The gripper is powered and controlled with single cable that carries CAN bus communication and 24V power supply.</p> <p>Voltages</p> <p>To power the gripper you need to use 24V.  You can send commands to the gripper using 5V CAN bus. </p>"},{"location":"page1_about_the_gripper/#dimensions","title":"Dimensions","text":"<p>| </p> <p> </p> <p> </p>"},{"location":"page1_about_the_gripper/#dimensions-with-parol6-adapter","title":"Dimensions with PAROL6 adapter","text":""},{"location":"page1_about_the_gripper/#3d-model","title":"3D model","text":"<p>Link to the STEP model</p> <p> </p>"},{"location":"page1_about_the_gripper/#torque-curves","title":"Torque curves","text":"<p>As you can see from the plot relationship between current and applied force is linear.  Unit of current is Ampere [A] and unit of Force is Newton [N].</p> <p>Torque curve</p> <p>Note that this plot only applies to the grippers bought from source robotics that use BLDC motors with fine tuned Kt of 0.325. If you are building your own gripper this value might be different.</p>"},{"location":"page1_about_the_gripper/#can-bus-termination","title":"CAN bus termination","text":"<p>By default SSG48 gripper has terminated can bus with 120 ohm resistor!</p> <p>This can be adjusted by opening the gripper to access the Spectral Micro BLDC driver inside and flipping its termination resistor switch.</p>"},{"location":"page1_about_the_gripper/#spectral-driver-config","title":"Spectral driver config","text":"<p>Config</p> <p>If you bought the gripper it comes preconfigured and calibrated!</p> <p>If you are building the gripper you will need to send the following commands to it over serial to place the BLDC controller in the gripper mode and enable the thermistor: </p> <pre><code>#Gripper 1\n#Term 1\n#Save\n</code></pre>"},{"location":"page1_about_the_gripper/#gripper-linear-speed","title":"Gripper linear speed","text":"<p>Gripper min and max speed is commanded and returned in 0-255 format.  </p>  In the Spectral Micro firmware these values are maped to ticks/s 255 = 80000 ticks/s while 0 = 40 ticks/s    To calculate linear speed of the gripper jaws use this formula v[m/s] = ()    r = 0.006m \\[  \\text{ticks_per_s} = 40 + \\left(\\frac{80000 - 40}{255}\\right) \\times C  \\] \\[ \\omega = \\frac{\\text{ticks_per_s}}{2^{14}} \\times 2\\pi \\] \\[ v = \\omega \\times r \\]"},{"location":"page2_installation/","title":"Installation","text":""},{"location":"page2_installation/#coupler-connector-plate","title":"Coupler connector plate","text":"<p>SSG-48 allows you to adapt it to any robotic arm by 3D printing custom adapters.</p> <p>You can download Coupler connector template STEP file here and adapt its design to fit your robot or application.</p> <p> </p>"},{"location":"page2_installation/#parol6-installation","title":"PAROL6 installation","text":"<p>To use SSG48 gripper with PAROL6 robotic arm you will have to download coupler connector for PAROL6.</p> Installation Step 1 Step 2 Attach gripper to J6 motor Tighten up the screws of the shaf coupler (Marked with red circle, one on each side) <p> </p> <p> </p>"},{"location":"page2_installation/#electrical-setup","title":"Electrical setup","text":"<p>If you are making DIY cables make sure your cable has the correct pinout. If it does not you will destroy your gripper</p> <p>You can buy suitable cables here!</p> <p>Connect one end of the cable to the gripper and another to the parol6 gripper connector</p>"},{"location":"page2_installation/#jaw-adapter-template","title":"Jaw adapter template","text":"<p>You can download jaw template STEP file here and adapt your gripper jaws to your specifications.</p> <p> </p> <p>When designing new fingertips for the jaws follow these tips:</p> <ul> <li>Do not make fingertips with height larger than 80 mm</li> <li>Do not make fingertips width larger than 60 mm</li> </ul>"},{"location":"page3_control/","title":"Control","text":"<p>Primary control interface for SSG48 gripper is CAN bus. Secondary control mode is with UART. </p> <p>The gripper can:</p> <ul> <li>Control the force, speed and position of gripper jaws</li> <li>Movements of the both jaws are always in sync</li> <li>Movement is initiated with a CAN \"Send_gripper_data_pack\" command</li> <li>Gripper has built in object detection feature that will report back when a object is detected</li> </ul> <p>Go to Application interfaces tab for more details about the gripper commands!</p> <p>The best way to learn how the gripper works is thru examples!</p>"},{"location":"page3_control/#working-principle","title":"Working principle","text":"<ul> <li>After every power up the gripper needs to be calibrated to function.</li> <li>Calling the calibration command will start the gripper movement. Calibration will find exact endpoints of the gripper.</li> <li>After calibration the gripper needs to be activated.</li> <li>After activation, gripper can be used (If there are any errors they need to be cleared also)</li> <li>Now you can issues \"Send_gripper_data_pack\" commands that will move the gripper to the specified position with desired speed and torque presets.</li> </ul> <p>The gripper will never send CAN commands on its own. Gripper will only respod to \"Send_gripper_data_pack\" with \"Respond_Gripper_data_pack\".</p> <p>Empty commands</p> <p>Note that Send_gripper_data_pack can be an empty command containg no data. The gripper will still respond to that with Respond_Gripper_data_pack. This options works great if you have a lot of devices on the can bus of the gripper and dont want to overload it with big data packets. The workflow here would be to send one Send_gripper_data_pack that contains the needed move and after that call Send_gripper_data_pack with no data to get responses from the gripper.</p> <p>Command rate</p> <p>It is recommended to send commands to the gripper with rate of 50Hz or higher!</p>"},{"location":"page3_control/#gripper-gui","title":"Gripper GUI","text":"<p>You can install GUI from here!   To connect to gripper GUI you will have to have CAN bus adapter for PC.    </p> <p> </p> <ul> <li>Section 1 has a few commands important to operation of the gripper and connecting to it. </li> <li>Section 2 has slider and entry boxes for commanding the gripper</li> <li>Section 3 shows gripper status</li> <li>Section 4 shows current gripper position and current</li> <li>Section 5 shows live plots of gripper position and current</li> <li>Section 6 shows FPS of the GUI and options for dark/light mode</li> </ul> <p>Note</p> <p>Only one gripper can be connected to the GUI at the time.</p>"},{"location":"page3_control/#using-the-gui","title":"Using the GUI","text":"<p>First you will need to know the COM port where your USB to CAN adapter is connected. After that enter it to the COM port box in section one.  Press connect.</p> <p>Default CAN Node ID</p> <p>Default CAN Node ID is 0. To change it you check out spectral micro docs on how to change CANID Link</p> <p>After you have connected to the GUI you will need to calibrate the gripper. Press the calibrate button in the section one. The gripper will start to move and if calibration was success you will see \"Calibrated\" in section 3.    </p> <p>Now that the gripper is calibrated press activate button and in case there is an error active press clear error button.</p> <p>Now you can control your gripper by setting position, speed and current values in section 2. </p> <p>Movement</p> <p>Only setting the position value will start the gripper movement.</p> <p>In the section 5 you will see live values of gripper position and current.</p>"},{"location":"page3_control/#using-python-api","title":"Using python API","text":"<p>This example will calibrate the gripper; after that it will open and close it. Note if the gripper is in error state you will have to first clear the error!   Get the API here!</p> <pre><code>import Spectral_BLDC as Spectral\nimport time\n\nCommunication1 = Spectral.CanCommunication(bustype='slcan', channel='COM41', bitrate=1000000)\nMotor1 = Spectral.SpectralCAN(node_id=0, communication=Communication1)\n\nvar = 0\n\nwhile True:\n\n\n    #Motor1.Send_gripper_data_pack(0,255,1500,1,1,0,0) \n    #Motor1.Send_gripper_data_pack(255,255,1500,1,1,0,0) \n\n    if var == 0:\n        #Motor1.Send_Clear_Error()\n        Motor1.Send_gripper_calibrate()\n        var = 1\n    elif var == 1:\n        Motor1.Send_gripper_data_pack(100,20,500,1,1,0,0) \n        var = 2\n    elif var == 2:\n        Motor1.Send_gripper_data_pack(10,20,500,1,1,0,0) \n        var = 0\n\n\n    message, UnpackedMessageID = Communication1.receive_can_messages(timeout=0.2) \n\n    if message is not None:\n        print(f\"Message is: {message}\")\n        print(f\"Node ID is : {UnpackedMessageID.node_id}\")\n        print(f\"Message ID is: {UnpackedMessageID.command_id}\")\n        print(f\"Error bit is: {UnpackedMessageID.error_bit}\")\n        print(f\"Message length is: {message.dlc}\")\n        print(f\"Is is remote frame: {message.is_remote_frame}\")\n        print(f\"Timestamp is: {message.timestamp}\")\n\n        Motor1.UnpackData(message,UnpackedMessageID)\n    else:\n        print(\"No message after timeout period!\")\n    print(\"\")\n    time.sleep(4)\n</code></pre>"},{"location":"page3_control/#using-uart","title":"Using UART","text":"<p>To use uart you will have to acces UART port on the SSG48 gripper. Unscrew coupler connector and connect uart adapter to the connector on the image. Note that it uses 3v3, using 5V can destroy your driver/gripper. To read mode about how to use UART with SSG48/Spectral micro BLDC go to this link!</p> <p>Compatible USB to uart adapter can be bought here: Link</p> <p>Setup:</p> <ul> <li>Gripper 1 (Tells our motor controller we are using it as gripper)</li> <li>Gripcal (this will calibrate the gripper)</li> </ul> <p>Control:</p> <ul> <li>Gripvel x (x is value from 0 - 255; 0 being min speed 255 max speed)</li> <li>Gripcur x (x is value from 0 - 1300 [mA])</li> <li>Grippos x (x is vale from 0 - 255; 0 being fully open 255 fully closed)</li> </ul> <p>Note</p> <p>Only Grippos will start the gripper movement!</p>"},{"location":"page4_Application_interfaces/","title":"Application interfaces","text":"<p>Since the SSG48 gripper is based on spectral micro BLDC drivers, it inherits all of their control methods and functionality.  Here we will describe only ones that are needed for gripper operation. For full list of commands go Here.  Also since the gripper is based on Spectral micro it has UART interface you can control it with.</p> <p> </p> <p>Bits 10 - 7 of CAN ID represent Node ID.  Node IDs can range from 0 - 15 Meaning you can have maximum 16 different devices on one CAN bus.</p> <p>Default NODE ID</p> <p>Default NODE ID of the gripper is 0! To change it check the spectral micro docs.</p> <p>Bits 6 - 1 of the CAN ID represent Command ID. Command IDs can range from 0 - 63.</p> <p>Bit 0 represents error bit. If spectral micro BLDC controller has any active error this bit will be set to 1. Note this bit is send always by the driver and is independent about the command ID and data.</p> <p>Node with smallest Node ID is strongest in CAN bus arbitration.</p>"},{"location":"page4_Application_interfaces/#can-commands","title":"CAN commands","text":""},{"location":"page4_Application_interfaces/#respond_gripper_data_pack","title":"Respond_Gripper_data_pack","text":"<ul> <li>Command ID: 60 </li> <li>Direction: Gripper -&gt; host </li> <li>Python call: None, this command is sent only by driver </li> <li>Length: 4 byte </li> <li>Type of frame: standard </li> </ul> Size (bytes) Variable (Spectral_BLDC Lib python attribute) Type Details 0 gripper_position unsigned 8bit 1-2 gripper_current 16 bit signed 3(bit 0) gripper_activated bit (0/1) gripper activated (1) / deactivated (0) 3(bit 1) gripper_action_status bit (0/1) 1 is goto, 0 is idle or performing auto release or in calibration 3(bit 2 and 3) gripper_object_detection 2 bit 0 in motion, 1 object detected closing, 2 object detected opening, 3 at positon 3(bit 4) gripper_temperature_error bit (0/1) gripper_temperature_error 3(bit 5) gripper_timeout_error bit (0/1) gripper_timeout_error 3(bit 6) gripper_estop_error bit (0/1) gripper_estop_error 3(bit 7) gripper_calibrated bit (0/1) gripper calibration status; calibrated (1) / not calibrated (0)"},{"location":"page4_Application_interfaces/#send_gripper_data_pack","title":"Send_gripper_data_pack","text":"<ul> <li>Command ID: 61 </li> <li>Direction: Host -&gt; Gripper </li> <li>Python API reference: Send_gripper_data_pack() </li> <li>Type of frame: standard </li> <li>Length: 5 byte </li> </ul> Size (bytes) Variable Type Details 0 Position unsigned 8bit 1 Velocity unsigned 8bit 2-3 Current signed 16bit 4(bit 0) Gripper activate bit (0/1) 0 - deactivate the gripper, 1 - activate the gripper 4(bit 1) Gripper action status bit (0/1) 0 - idle , 1 - movement 4(bit 2) Gripper estop status bit (0/1) 0 - No estop, 1 - Estop pressed 4(bit 3) Gripper release direction bit (0/1) Not used <p>Driver will respond to this command with: Respond_Gripper_data_pack</p> <p>Alternatively you can send empty Send_gripper_data_pack command</p> <ul> <li>Command ID: 61 </li> <li>Direction: Host -&gt; Gripper </li> <li>Python API reference: Send_gripper_data_pack() </li> <li>Type of frame: standard </li> <li>Length: 0 byte </li> </ul> <p>Driver will respons to this command with: Respond_Gripper_data_pack</p>"},{"location":"page4_Application_interfaces/#send_gripper_calibrate","title":"Send_gripper_calibrate","text":"<ul> <li>Command ID: 62 </li> <li>Direction: Host -&gt; Gripper </li> <li>Python API reference: Send_gripper_calibrate() </li> <li>Type of frame: standard </li> <li>Length: 0 byte </li> </ul> <p>Driver will not respond to this command!</p>"},{"location":"page4_Application_interfaces/#send_can_id","title":"Send_CAN_ID","text":"<p>This command will set a new CAN ID for your motor driver.  Note that ID you send is the new motor ID.</p> <ul> <li>Command ID: 11 </li> <li>Direction: Host -&gt; Gripper </li> <li>Python API reference: Send_CAN_ID() </li> <li>Type of frame: standard </li> <li>Length: 1 byte </li> </ul> Size (bytes) Variable Type 0 ID byte <p>Driver will not respond to this command!</p>"},{"location":"page4_Application_interfaces/#send_save_config","title":"Send_Save_config","text":"<ul> <li>Command ID: 13 </li> <li>Direction: Host -&gt; Gripper </li> <li>Python API reference: Send_Save_config() </li> <li>Type of frame: standard </li> <li>Length: 0 byte </li> </ul> <p>Driver will not respond to this command!</p>"},{"location":"page4_Application_interfaces/#send_reset","title":"Send_Reset","text":"<ul> <li>Command ID: 14 </li> <li>Direction: Host -&gt; Gripper </li> <li>Python API reference: Send_Reset() </li> <li>Type of frame: standard </li> <li>Length: 0 byte </li> </ul> <p>Driver will not respond to this command!</p>"},{"location":"page4_Application_interfaces/#send_clear_error","title":"Send_Clear_Error","text":"<ul> <li>Command ID: 1 </li> <li>Direction: Host -&gt; Gripper </li> <li>Python API reference: Send_Clear_Error() </li> <li>Type of frame: standard </li> <li>Length: 0 byte </li> </ul> <p>Driver will not respond to this command!</p>"},{"location":"page4_Application_interfaces/#uart-interface","title":"UART interface","text":"<p>For full list of UART commands available to the SSG48 gripper check this link!</p>"},{"location":"page4_Application_interfaces/#gripper-commands","title":"Gripper commands","text":"<p>Commands used when in gripper mode. Procedure: </p> <ul> <li>Gripper 1 (Tells our motor controller we are using it as gripper)</li> <li>Gripcal (this will calibrate the gripper)</li> <li>Gripvel x (x is value from 0 - 255; 0 being min speed 255 max speed)</li> <li>Gripcur x (x is value from 0 - 1000 [mA])</li> <li>Grippos x (x is vale from 0 - 255; 0 being fully open 255 fully closed)</li> </ul> Name Type Input Data type Desciption Response <code>Gripper</code> Set/Get bool <code>Set/get Am I a gripper</code> Is this device gripper or not <code>Gripcal</code> Action <code>Start gripper calibration</code> None <code>Grippos</code> Set/Get uint8_t <code>Set/get desired gripper setpoint position (from 0 to 255). Also will set gripper into GOTO mode and execute the command</code> Gripper positon value <code>Gripvel</code> Set/Get uint8_t <code>Set/get desired gripper velocity setpoint (from 0 to 255)</code> Gripper velocity value setpoint <code>Gripcur</code> Set/Get int <code>Set/get desired gripper current in mA from 0 - 1000 (Note value below 150 are unstable)</code> Gripper current value setpoint; to get current current value use #Iq <code>Gripact</code> Set/Get bool <code>Set/get gripper activation bit</code> Is gripper activated or not <code>Gripstop</code> Set/Get bool <code>Set/get gripper Estop bit</code> Gripper estop bit status <code>Gripinfo</code> Action <code>Print information about this gripper</code> All information about gripper like: is it calibrated, status, endstop values..."},{"location":"page6_safety/","title":"Safety and Maintenance","text":"<p>SSG48 gripper is not ment to be used with industrial robots. The gripper, robot and equipment used need to be evaluated with risk assessment and it is duty of the gripper integrator.</p> <p>Warning</p> <p>The operator must read and understand all of the instructions noted in this manual before using and handling the gripper.</p>"},{"location":"page6_safety/#warning","title":"Warning","text":"<p>Danger</p> <p>The Gripper should not be used in disregard of these safety tips and warnings, as it may lead to injury or damage.</p>"},{"location":"page6_safety/#temperature-warning","title":"Temperature warning","text":"<p>The gripper has built in termistor in motor coils that will stop it from reaching too high temperatures. That limit is 75 degrees. After it is reached the temperature error will be triggered and the gripper will go do idle mode. This temperature limit can be changed via UART commands-</p>"},{"location":"page6_safety/#gripper-force","title":"Gripper force","text":"<p>This gripper can exert large amount of force (80N) on top of that it reach really high speeds. Those 2 combined can be dangerous for humans and other objects. It is recommneded to always keep current preset and speed at low values while testing. Those values could be:</p> <ul> <li>Current: 300</li> <li>Speed: 30</li> </ul> <p>After you confirm your aplication works increase the values.</p> <p>Danger</p> <p>NEVER PLACE YOUR FINGER INSIDE THE GRIPPER.</p>"},{"location":"page6_safety/#pinching-points","title":"Pinching points","text":"<p>Pinching points</p> <p>The gripper Jaws act as a pinching point and if current limit is set to a large value it can hurt you and others.</p>"},{"location":"page6_safety/#estop","title":"Estop","text":"<p>The gripper will go do idle mode if it receives estop_status = 1 from Send_gripper_data_pack</p>"},{"location":"page6_safety/#maintenance","title":"Maintenance","text":"<p>Note that gripper is not waterproof or dust proof. The jaws part has a large gaps that allow dust, water and particles to enter the gripper. Never use the gripper in dusty and moist environments. </p>"},{"location":"page6_safety/#gear-lubrication","title":"Gear lubrication","text":"<p>You can apply lithium greese to lubricate the gears of the gripper. To do that remove 4 screw that hold linear track of the jaws and apply greese to the jaws.</p>"},{"location":"page6_safety/#errors","title":"Errors","text":"<p>The gripper returns 4 bits related to errors with its Respond_Gripper_data_pack</p> <ul> <li>General error bit - This bit will be 1 if any other error is active</li> <li>Temperature error bit - If temperature of motor coils goes above some value this will go to 1</li> <li>Timeout error bit - Not implemented</li> <li>Estop error bit - Will go to 1 if we receive Estop status 1 from Send_gripper_data_pack</li> </ul> <p>Errors</p> <p>Note that errors will remain active until you call Send_Clear_Error</p>"},{"location":"page7_performance/","title":"Performance and tests","text":"<p>These tests represent termal performance of the SSG48 gripper under different conditions. The default value for termal error is 75 degrees.</p> <p>Errors</p> <p>If you built SSG48 gripper by yourself and did not place thermistor in the motor coils you risk destroying your gripper during normal operation.</p>"},{"location":"page7_performance/#performance-over-multiple-days","title":"Performance over multiple days","text":"<ul> <li>Testing: cycle open and close every 2.5s</li> <li>No load present; current/torque applied is near 0</li> <li>Continous testing for 7 days</li> <li>Motor temperature: 42</li> <li>Ambient temperature:  33 </li> </ul>"},{"location":"page7_performance/#max-constant-current-over-some-time","title":"Max constant current over some time","text":"<ul> <li>Testing: Hold object</li> <li>Max current setpoint: 300mA</li> <li>Tested for 24h</li> <li>Stable motor temperature during testing: 62 degree</li> <li>Ambient temperature:  33 </li> </ul>"},{"location":"page7_performance/#max-current-to-trigger-termal-error","title":"Max current to trigger termal error","text":"<ul> <li>Testing: Hold object</li> <li>Max current setpoint: 1600mA</li> <li>Time to trigger termal error under 1600mA load: 4 min</li> <li>Ambient temperature:  33 </li> </ul>"}]}